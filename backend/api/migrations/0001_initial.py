# Generated by Django 4.0.3 on 2022-04-08 00:33

import api.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=255, primary_key=True, serialize=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', api.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Airline',
            fields=[
                ('name', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('location', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'airline',
            },
        ),
        migrations.CreateModel(
            name='AirlineAdmin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_id', models.PositiveIntegerField(unique=True)),
                ('email', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'airline_admin',
            },
        ),
        migrations.CreateModel(
            name='Airplane',
            fields=[
                ('pid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('model', models.CharField(max_length=255)),
                ('manufacturer', models.CharField(max_length=255)),
                ('economy_seats', models.PositiveIntegerField()),
                ('premium_economy_seats', models.PositiveIntegerField()),
                ('business_seats', models.PositiveIntegerField()),
                ('first_seats', models.PositiveIntegerField()),
                ('airline_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.airline')),
            ],
            options={
                'db_table': 'airplane',
            },
        ),
        migrations.CreateModel(
            name='AirportAdmin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admin_id', models.PositiveIntegerField(unique=True)),
                ('email', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'airport_admin',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('name', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('a_email', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.airportadmin')),
            ],
            options={
                'db_table': 'company',
            },
        ),
        migrations.CreateModel(
            name='Destination',
            fields=[
                ('airport_code', models.CharField(max_length=3, primary_key=True, serialize=False)),
                ('city', models.CharField(max_length=255)),
                ('country', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'destination',
            },
        ),
        migrations.CreateModel(
            name='Fare',
            fields=[
                ('fare_id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('price', models.PositiveIntegerField()),
                ('cabin', models.CharField(max_length=255)),
                ('tickets', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'fare',
            },
        ),
        migrations.CreateModel(
            name='Hotel',
            fields=[
                ('id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('location', models.CharField(max_length=255)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.company')),
            ],
            options={
                'db_table': 'hotel',
            },
        ),
        migrations.CreateModel(
            name='Passenger',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ssn', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=255)),
                ('email', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'passenger',
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('transac_id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=255)),
                ('date', models.DateField(auto_now_add=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.company')),
                ('p_email', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.passenger')),
            ],
            options={
                'db_table': 'transaction',
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('ticket_id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('seat_pos', models.CharField(max_length=255)),
                ('fare_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.fare')),
                ('p_email', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.passenger')),
            ],
            options={
                'db_table': 'ticket',
            },
        ),
        migrations.CreateModel(
            name='Stay',
            fields=[
                ('id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('price', models.PositiveIntegerField()),
                ('description', models.TextField()),
                ('hotel_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.hotel')),
                ('transac_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.transaction')),
            ],
            options={
                'db_table': 'stay',
            },
        ),
        migrations.CreateModel(
            name='Flight',
            fields=[
                ('flight_num', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('dep_time', models.DateTimeField()),
                ('arrival_time', models.DateTimeField()),
                ('airline_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.airline')),
                ('dest_code', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.destination')),
                ('plane_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.airplane')),
            ],
            options={
                'db_table': 'flight',
            },
        ),
        migrations.AddField(
            model_name='fare',
            name='flight_num',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.flight'),
        ),
        migrations.CreateModel(
            name='AirportComplaint',
            fields=[
                ('complaint_id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('description', models.TextField()),
                ('a_email', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.airportadmin')),
                ('p_email', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.passenger')),
            ],
            options={
                'db_table': 'airport_complaint',
            },
        ),
        migrations.CreateModel(
            name='AirlineComplaint',
            fields=[
                ('complaint_id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('description', models.TextField()),
                ('a_email', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.airlineadmin')),
                ('airline_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.airline')),
                ('p_email', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.passenger')),
            ],
            options={
                'db_table': 'airline_complaint',
            },
        ),
    ]
